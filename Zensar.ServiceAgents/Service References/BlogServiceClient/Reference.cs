//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zensar.ServiceAgents.BlogServiceClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterCriteria", Namespace="http://schemas.datacontract.org/2004/07/Zensar.Core.DBEntities.Filters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Zensar.ServiceAgents.BlogServiceClient.FilterCriteria[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Zensar.ServiceAgents.BlogServiceClient.FilterType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Zensar.ServiceAgents.BlogServiceClient.BitWiseOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Zensar.ServiceAgents.BlogServiceClient.Operator))]
    public partial class FilterCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Zensar.ServiceAgents.BlogServiceClient.FilterType FilterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Zensar.ServiceAgents.BlogServiceClient.BitWiseOperation OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Zensar.ServiceAgents.BlogServiceClient.Operator OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Zensar.ServiceAgents.BlogServiceClient.FilterType FilterType {
            get {
                return this.FilterTypeField;
            }
            set {
                if ((this.FilterTypeField.Equals(value) != true)) {
                    this.FilterTypeField = value;
                    this.RaisePropertyChanged("FilterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Zensar.ServiceAgents.BlogServiceClient.BitWiseOperation Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Zensar.ServiceAgents.BlogServiceClient.Operator Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((this.OperatorField.Equals(value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterType", Namespace="http://schemas.datacontract.org/2004/07/Zensar.Core.DBEntities.Filters")]
    public enum FilterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportFilter = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BitWiseOperation", Namespace="http://schemas.datacontract.org/2004/07/Zensar.Core.DBEntities.Filters")]
    public enum BitWiseOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Or = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operator", Namespace="http://schemas.datacontract.org/2004/07/Zensar.Core.DBEntities.Filters")]
    public enum Operator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EqualTo = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEqualTo = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contains = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotContains = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlogServiceClient.IBlogService")]
    public interface IBlogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogs", ReplyAction="http://tempuri.org/IBlogService/GetBlogsResponse")]
        Zensar.ServiceAgents.BlogServiceClient.GetBlogsResponse GetBlogs(Zensar.ServiceAgents.BlogServiceClient.GetBlogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogs", ReplyAction="http://tempuri.org/IBlogService/GetBlogsResponse")]
        System.Threading.Tasks.Task<Zensar.ServiceAgents.BlogServiceClient.GetBlogsResponse> GetBlogsAsync(Zensar.ServiceAgents.BlogServiceClient.GetBlogsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBlogsRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBlogsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Zensar.ServiceAgents.BlogServiceClient.FilterCriteria[] Filters;
        
        public GetBlogsRequest() {
        }
        
        public GetBlogsRequest(Zensar.ServiceAgents.BlogServiceClient.FilterCriteria[] Filters) {
            this.Filters = Filters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBlogsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBlogsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool IsSuccess;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Message;
        
        public GetBlogsResponse() {
        }
        
        public GetBlogsResponse(bool IsSuccess, string Message) {
            this.IsSuccess = IsSuccess;
            this.Message = Message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlogServiceChannel : Zensar.ServiceAgents.BlogServiceClient.IBlogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogServiceClient : System.ServiceModel.ClientBase<Zensar.ServiceAgents.BlogServiceClient.IBlogService>, Zensar.ServiceAgents.BlogServiceClient.IBlogService {
        
        public BlogServiceClient() {
        }
        
        public BlogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Zensar.ServiceAgents.BlogServiceClient.GetBlogsResponse GetBlogs(Zensar.ServiceAgents.BlogServiceClient.GetBlogsRequest request) {
            return base.Channel.GetBlogs(request);
        }
        
        public System.Threading.Tasks.Task<Zensar.ServiceAgents.BlogServiceClient.GetBlogsResponse> GetBlogsAsync(Zensar.ServiceAgents.BlogServiceClient.GetBlogsRequest request) {
            return base.Channel.GetBlogsAsync(request);
        }
    }
}
