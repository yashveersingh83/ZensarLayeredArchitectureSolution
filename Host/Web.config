<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,Microsoft.Practices.Unity.Configuration" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
  </configSections>
  <connectionStrings>
    <add name="ZensarDBConnection" providerName="System.Data.SqlClient" connectionString="Server=DTA641-045\DTA641045;Database=ZensarSampleDb;Integrated Security=True;" />
  </connectionStrings>
  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="Event Log Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" source="Zensar Backend Log" formatter="Text Formatter" log="Application" machineName="." traceOutputOptions="None" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="Timestamp: {timestamp}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}" name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Event Log Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Event Log Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!-- LOGGER INTERFACE TYPE REGISTRATION-->
    <alias alias="ILogger" type=" Zensar.Common.ILogger, Zensar.Common" />
    <alias alias="Logger" type=" Zensar.Common.Logger, Zensar.Common" />
    
    <!--SERVICE AGENT INTERFACE TYPE REGISTRATION
    
    -->
    <!--SERVICE AGENT IMPLEMENTATION TYPE REGISTRATION   
    <alias alias="SirQueueProcessingServiceAgent" type="Iaea.SG.SIR.ServiceAgents.SirQueueProcessingServiceAgent, Iaea.SG.SIR.ServiceAgents" />   
-->
    <!--BUSINESS LAYER INTERFACE TYPE REGISTRATION-->
    
    <alias alias="IRequestProcessor" type="Zensar.Core.Business.Interface.IRequestProcessor, Zensar.Core.Business.Interface" />
   
    <!--BUSINESS LAYER IMPLEMENTATION TYPE REGISTRATION-->
    
    <alias alias="RequestProcessor" type="Zensar.Core.Business.RequestProcessor, Zensar.Core.Business" />
    
    <!--DATA ACCESS LAYER INTERFACE TYPE REGISTRATION-->
    
    <alias alias="IUnitOfWork" type="Zensar.Core.DAL.Interfaces.IUnitOfWork, Zensar.Core.DAL.Interfaces" />
    <alias alias="IUnitOfWorkFactory" type="Zensar.Core.DAL.Interfaces.IUnitOfWorkFactory, Zensar.Core.DAL.Interfaces" />
   
    <!--DATA ACCESS LAYER IMPLEMENATION TYPE REGISTRATION-->
    
    <alias alias="EfUnitOfWork" type="Zensar.Core.DAL.Implementation.EfUnitOfWork,Zensar.Core.DAL.Implementation" />
    <alias alias="EfUnitOfWorkFactory" type="Zensar.Core.DAL.Implementation.EfUnitOfWorkFactory,Zensar.Core.DAL.Implementation" />
    <container>
    
      <!-- business registration  -->
      <register type="ILogger" mapTo="Logger"></register>
      <register type="IRequestProcessor" mapTo="RequestProcessor"></register>
      <!-- Backend unitofwork registration  -->
      <register type="IUnitOfWork" mapTo="EfUnitOfWork"></register>
      <register type="IUnitOfWorkFactory" mapTo="EfUnitOfWorkFactory">
        <constructor>
          <param name="connectionString" value="name=ZensarDBConnection"></param>
        </constructor>
      </register>
      
    </container>
  </unity>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />

    <services>
      <service name="BlogService">
        <endpoint address="" contract="Zensar.DataServices.IBlogService" binding="basicHttpBinding"></endpoint>
        <endpoint address="mex" binding="mexHttpBinding"  contract="IMetadataExchange" />
      </service>
    </services>
  </system.serviceModel>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
    <system.webServer>
        <directoryBrowse enabled="true" />
    </system.webServer>
</configuration>